@startuml
title		Ver Episodio
hide	footbox

actor	Usuario as usuario
participant "vista:EpisodioJDialog" as vista
participant "controlador:TotSeries" as totseries
participant "registro:Registro" as registro
participant "cliente:Cliente" as cliente
participant ":ActivityState" as state
participant "episodio:Episodio" as episodio

usuario -> vista : Reproducir
activate vista
vista ->totseries : empezarReproduccion(Episodio episodio)
activate totseries
totseries -> registro : getLoggedAsCliente()
activate registro
registro -> totseries : cliente
deactivate registro
    opt ! retorno
        totseries -> cliente : canViewEpisode():Boolean
        activate cliente
        cliente -> state : canViewEpisode():Boolean
        activate state
        state -> cliente : Boolean
        deactivate state
        cliente -> totseries : retorno:=Boolean
        deactivate cliente
        note right totseries
            si se cumple la condicion
            se retorna a la vista
        end note
    end opt
totseries -> cliente: nextActivityState()
activate cliente
cliente -> state:nextState(this)
activate state
state -> cliente
deactivate state
cliente -> totseries
deactivate cliente
totseries ->vista
deactivate totseries
vista -> totseries : finalizarReproduccion(Episodio episodio, boolean true)
activate totseries
totseries -> cliente : nextActivityState()
activate cliente
cliente -> state : nextState(this)
activate state
state -> cliente
deactivate state
cliente -> totseries
deactivate cliente
note right totseries
    se crea una nueva Reproduccion
    con el cliente actualmente logueado
end note
totseries -> episodio :addReproduccion(Reproduccion repro)
activate episodio
episodio -> totseries
deactivate episodio
totseries -> vista
deactivate totseries
vista -> usuario
deactivate vista
@enduml
