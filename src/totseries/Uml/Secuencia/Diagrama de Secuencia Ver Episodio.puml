@startuml
title		Ver Episodio
hide	footbox

actor	Usuario as usuario
participant "vista:EpisodioJDialog" as vista
participant "controlador:TotSeries" as totseries
participant "registro:Registro" as registro
participant "cliente:Cliente" as cliente
participant ":ActivityState" as state
participant "episodio:Episodio" as episodio
participant ":Factura" as factura
participant ":Reproduccion" as reproduccion

usuario -> vista : ClickBotonReproducir
activate vista
vista ->totseries : empezarReproduccion():Boolean
activate totseries
totseries -> registro : getLoggedAsCliente()
activate registro
registro --> totseries : cliente
deactivate registro
'
totseries -> cliente : canViewEpisode():Boolean
activate cliente
cliente -> state : canViewEpisode():Boolean
activate state
state --> cliente : can_view
deactivate state
cliente --> totseries : can_view
deactivate cliente
'  
opt can_view

    totseries -> cliente: nextActivityState()
    activate cliente
    cliente -> state:nextState(this)
    activate state
    state --> cliente
    deactivate state
    cliente --> totseries
    deactivate cliente
    
end opt

totseries -->vista: can_view
    deactivate totseries

opt !can view
    vista --> usuario
end opt

vista -> totseries : finalizarReproduccion(\nEpisodio episodio,\n boolean true)
activate totseries

totseries -> registro : getLoggedAsCliente()
activate registro
registro --> totseries : cliente
deactivate registro

totseries -> cliente : nextActivityState()
activate cliente
cliente -> state : nextState(this)
activate state
state --> cliente
deactivate state
cliente --> totseries
deactivate cliente

totseries -> cliente : getUsername():String
activate cliente
cliente -->totseries: username
deactivate cliente


totseries -> episodio :addReproduccion(username)
activate episodio
episodio -> reproduccion: new Reproduccion(String username)
activate reproduccion
reproduccion --> episodio: reproduccion
deactivate reproduccion
episodio ->episodio: reproducciones.add(reproduccion)
episodio ->episodio: notifyObservers(1)
episodio ->episodio: setChanged();
episodio --> totseries
deactivate episodio


totseries -> cliente: addVisualizacion()
activate cliente
cliente -> factura: addVisualizacion(boolean isVip)
activate factura
note left factura
    visualizaciones++
    if (isVip) precio+=PRICE*0.9
    else precio+=PRICE
end note
factura --> cliente
deactivate factura
cliente --> totseries
deactivate cliente

totseries --> vista
deactivate totseries
vista --> usuario
deactivate vista
@enduml
